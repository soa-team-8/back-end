version: '3.9'

services:
  explorer:
    build:
      dockerfile: Dockerfile
      context: .
      target: final
    restart: on-failure
    networks:
      - database
    ports:
      - "44333:80"
    environment:
      DATABASE_HOST: database
      DATABASE_PORT: 5432
      DATABASE_PASSWORD: super
      DATABASE_USER: postgres
      DATABASE_SCHEMA: explorer-v1
    depends_on:
      - database
  database:
    image: postgres
    restart: always
    networks:
      - database
    environment:
      POSTGRES_PASSWORD: super
      POSTGRES_USER: postgres
      POSTGRES_DB: explorer-v1
    volumes:
      - type: volume
        source: database-data
        target: /var/lib/postgresql/data
      - type: bind
        source: explorer-init-data.sql
        target: /tmp/explorer-init.sql
    ports:
      - "5432:5432"
  
  tours-api:
    build:
      context: ../soa-tourism-explorer/tours-api
      dockerfile: Dockerfile
    image: tours-api
    container_name: tours_api_container
    restart: always
    networks:
      - database
    ports:
      - "3000:3000"
    depends_on:
      - tours_database
    environment:
      POSTGRES_ADDR: "postgres://postgres:root@tours_database:5432/tours"
      SERVER_PORT: 3000

  encounters-api:
    build:
      context: ../soa-tourism-explorer/encounters-api
      dockerfile: Dockerfile
    image: encounters-api
    container_name: encounters_api_container
    restart: always
    networks:
      - database
    ports:
      - "3030:3030"
    depends_on:
      - encounters_database
    environment:
      MONGODB_ADDR: "mongodb://encounters_database:27017"
      SERVER_PORT: 3030

  followers-api:
    build:
      context: ../soa-tourism-explorer/followers-api
      dockerfile: Dockerfile
    image: followers-api
    container_name: followers_api_container
    restart: always
    networks:
      - database
    ports:
      - "9090:9090"
    depends_on:
      - followers_database
    environment:
      NEO4J_ADDR: "bolt://followers_database:7687"
      SERVER_PORT: 9090

  tours_database:
    image: postgres
    container_name: tours_db_container
    restart: always
    networks:
      - database
    ports:
      - "5434:5432"
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: tours
    volumes:
      - tours_database_data:/var/lib/postgresql/data

  encounters_database:
    image: mongo
    container_name: encounters_db_container
    restart: always
    networks:
      - database
    ports:
      - "27017:27017"
    volumes:
      - encounters_database_data:/data/db

  followers_database:
    image: neo4j:latest
    container_name: followers_db_container 
    restart: always
    networks:
      - database
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/followers
    volumes:
      - followers_database_data:/data

  mongo-express:
    image: mongo-express
    container_name: mongo_express_container
    restart: always
    networks:
      - database
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: "encounters_database"  
      ME_CONFIG_MONGODB_PORT: "27017"
    depends_on:
      - encounters_database



volumes:
  database-data:
    name: explorer

  tours_database_data:
    name: tours_database_volume

  encounters_database_data:
    name: encounters_database_volume

  followers_database_data:
    name: followers_database_volume

networks:
  database:
    name: database
    driver: bridge
